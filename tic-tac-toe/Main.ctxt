#BlueJ class context
comment0.target=Main
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ it\ is\ main\ function\ of\ tic-tac-toe\ game\r\n\r\n
comment10.params=choice
comment10.target=boolean\ isInvalidBoardSizeClassic(int)
comment11.params=
comment11.target=int\ displaySecondMenu()
comment12.params=row\ col\ player1\ player2
comment12.target=void\ displayBoardSizeAndPlayers(int,\ int,\ java.lang.String,\ java.lang.String)
comment13.params=board\ isClassic
comment13.target=int\ playMatch(java.lang.String[][],\ boolean)
comment13.text=\r\n\ playMatch(String\ [][]\ board)\ -\ this\ method\ controls\ the\ playGame()\r\n\r\n\ @param\ \ board\ \ this\ is\ a\ String\ 2D\ array\r\n\ @return\ 1\ return\ 1\ if\ X\ won\ the\ match\r\n\ @return\ 2\ return\ 2\ if\ O\ won\ the\ match\r\n\ @return\ 3\ return\ 3\ when\ all\ games\ have\ been\ played\ and\ nobody\ won\r\n
comment14.params=
comment14.target=void\ getPlayer()
comment15.params=player\ order
comment15.target=boolean\ isInValidPlayer(java.lang.String,\ int)
comment16.params=choice
comment16.target=void\ displayRules(boolean)
comment17.params=
comment17.target=void\ displayWelcome()
comment18.params=result
comment18.target=void\ displayFinalResults(int)
comment19.params=board
comment19.target=java.lang.String[][]\ initializeBoard(java.lang.String[][])
comment2.params=
comment2.target=void\ firstMenu()
comment20.params=theBoard
comment20.target=void\ displayBoard(java.lang.String[][])
comment21.params=msg\ board
comment21.target=int\ getPlayersMove(java.lang.String,\ java.lang.String[][])
comment22.params=newValue\ board
comment22.target=boolean\ isInvalid(int,\ java.lang.String[][])
comment23.params=theBoard\ isClassic
comment23.target=int\ playGame(java.lang.String[][],\ boolean)
comment24.params=board
comment24.target=java.lang.String[][]\ randomlyFill(java.lang.String[][])
comment25.params=firstPlayer\ secondPlayer
comment25.target=int\ displayGameResults(int[],\ int[])
comment26.params=playerChar\ board
comment26.target=int\ getPlayerScoreClassic(java.lang.String,\ java.lang.String[][])
comment27.params=playerChar\ board
comment27.target=int[]\ getPlayerScoreBlackout(java.lang.String,\ java.lang.String[][])
comment28.params=row\ col\ player\ board
comment28.target=int\ checkForRight(int,\ int,\ java.lang.String,\ java.lang.String[][])
comment29.params=row\ col\ player\ board
comment29.target=int\ checkForBottomRight(int,\ int,\ java.lang.String,\ java.lang.String[][])
comment3.params=msg
comment3.target=int\ getFirstMenu(java.lang.String)
comment30.params=row\ col\ player\ board
comment30.target=int\ checkForBottom(int,\ int,\ java.lang.String,\ java.lang.String[][])
comment31.params=row\ col\ player\ board
comment31.target=int\ checkForBottomLeft(int,\ int,\ java.lang.String,\ java.lang.String[][])
comment32.params=theBoard
comment32.target=boolean\ isBoardFull(java.lang.String[][])
comment4.params=value
comment4.target=boolean\ isInvalidFirstMenuChoice(int)
comment5.params=
comment5.target=void\ menuBlackout()
comment6.params=
comment6.target=void\ menuClassic()
comment7.params=
comment7.target=java.lang.String[][]\ getBoardSizeBlackout()
comment8.params=size
comment8.target=boolean\ isInvalidBoardSizeBlackout(int)
comment9.params=
comment9.target=java.lang.String[][]\ getBoardSizeClassic()
numComments=33
